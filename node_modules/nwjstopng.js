throw "This script is not to be used as it has troubles loading the nw.gui";

// Save items in the interface of a nwjs app to a png file. 

// Usage
// var SaveToPNG=require('nwjstopng').Save;
// var InterfaceObject=document.getElementById('idofobject');
// var NameWithoutExtension="./results/picofidofobject";
// SaveToPNG(InterfaceObject, NameWithoutExtension)

// Limitations:
// This will only save what is visible on the screen and will not work in full screen mode. 

// Credits: this is based off the following gist: https://gist.github.com/rdtsc/5074753e163397f3d247

function CaptureAndSave(InterfaceObject, NameWithoutExtension) {
	var gui = require('nw.gui');
	var win = gui.Window.get();
	var fs  = require('fs');
	
	function CaptureRegion(rect, callback, format) {
		
		win.capturePage(function(data) {
			var img = new Image();
		
			img.onload = function() {
			var canvas = document.createElement('canvas');
		
			canvas.width  = rect.width;
			canvas.height = rect.height;
		
			
		
			canvas.getContext('2d').drawImage(img, -rect.left, -rect.top);
			callback(canvas.toDataURL('image/' + format));
			};
		
			img.src = data;
		}, 'png'); // Ensure JPEG compression happens only once, if ever.
	}
	function dumpBase64(data, filename, callback) {
		data = data.substr(data.indexOf(',') + 1);
		
		fs.writeFile(filename, data, 'base64', callback);
	}
	
	var bounds = InterfaceObject.getBoundingClientRect();
	
	var filename = NameWithoutExtension+'.png';
	var imageFmt = 'png';
	
	CaptureRegion(bounds, function(data) {
		dumpBase64(data, filename, function(error) {
			if(error) throw error;
		});
	}, imageFmt);
}

exports.Save=CaptureAndSave;